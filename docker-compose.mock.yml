services:
  email-service-mock:
    image: stoplight/prism:4
    command: mock -h 0.0.0.0 /api/email-service-api-v1.yaml
    ports:
      - "8083:4010"
    volumes:
      - ./docs:/api:ro
      - ./mocks/data:/data:ro
    environment:
      - PRISM_MOCK_DYNAMIC=true
      - PRISM_MOCK_CORS=true
      - PRISM_LOG_LEVEL=info
    networks:
      - personalea-mock
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4010/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  goal-strategy-service-mock:
    image: stoplight/prism:4
    command: mock -h 0.0.0.0 /api/goal-strategy-service-api-v1.yaml
    ports:
      - "8085:4010"
    volumes:
      - ./docs:/api:ro
      - ./mocks/data:/data:ro
    environment:
      - PRISM_MOCK_DYNAMIC=true
      - PRISM_MOCK_CORS=true
      - PRISM_LOG_LEVEL=info
    networks:
      - personalea-mock
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4010/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  calendar-service-mock:
    image: stoplight/prism:4
    command: mock -h 0.0.0.0 /api/calendar-service-api-v1.yaml
    ports:
      - "8086:4010"
    volumes:
      - ./docs:/api:ro
      - ./mocks/data:/data:ro
    environment:
      - PRISM_MOCK_DYNAMIC=true
      - PRISM_MOCK_CORS=true
      - PRISM_LOG_LEVEL=info
    networks:
      - personalea-mock
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4010/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mock-data-server:
    image: nginx:alpine
    ports:
      - "8090:80"
    volumes:
      - ./mocks/data:/usr/share/nginx/html:ro
      - ./mocks/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - personalea-mock
    depends_on:
      - email-service-mock
      - goal-strategy-service-mock
      - calendar-service-mock

  # Optional: Mock database for stateful responses
  mock-redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - personalea-mock
    command: redis-server --appendonly yes
    volumes:
      - mock-redis-data:/data

networks:
  personalea-mock:
    driver: bridge

volumes:
  mock-redis-data:
    driver: local