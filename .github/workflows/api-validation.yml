name: API Contract Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**/*.yaml'
      - 'docs/**/*.yml'
      - 'docs/.spectral.yaml'
      - 'package.json'
      - 'package-lock.json'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'docs/**/*.yaml'
      - 'docs/**/*.yml'
      - 'docs/.spectral.yaml'
      - 'package.json'
      - 'package-lock.json'

jobs:
  validate-apis:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Validate API specifications with Spectral
      run: npm run lint:api
      
    - name: Generate API documentation
      run: npm run docs:build
      
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '20.x'
      with:
        name: api-documentation
        path: |
          docs/*-docs.html
        retention-days: 30
        
    - name: Check for API breaking changes
      if: github.event_name == 'pull_request'
      run: |
        echo "Checking for potential breaking changes..."
        # This could be enhanced with tools like oasdiff
        npm run lint:api || echo "API validation warnings detected"
        
  mock-server-test:
    runs-on: ubuntu-latest
    needs: validate-apis
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Start mock servers
      run: |
        npm run mock:email &
        npm run mock:goals &
        npm run mock:calendar &
        sleep 10
        
    - name: Test mock server endpoints
      run: |
        # Test email service mock
        curl -f http://localhost:8083/v1/emails/sync -X POST \
          -H "Authorization: Bearer test-token" \
          -H "Content-Type: application/json" \
          -H "x-correlation-id: test-123" \
          -H "idempotency-key: test-key" \
          -d '{"provider": "gmail", "incremental": true}' || echo "Expected validation error"
          
        # Test goals service mock
        curl -f http://localhost:8085/v1/goals \
          -H "Authorization: Bearer test-token" \
          -H "x-correlation-id: test-123" || echo "Expected validation error"
          
        # Test calendar service mock
        curl -f http://localhost:8086/v1/calendars \
          -H "Authorization: Bearer test-token" \
          -H "x-correlation-id: test-123" || echo "Expected validation error"
          
    - name: Stop mock servers
      run: |
        pkill -f "prism mock" || true

  security-scan:
    runs-on: ubuntu-latest
    needs: validate-apis
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run API security scan
      run: |
        # Install and run API security scanning tools
        npm install -g @42crunch/api-security-audit
        
        # Scan each API specification
        api-security-audit docs/email-service-api-v1.yaml || true
        api-security-audit docs/goal-strategy-service-api-v1.yaml || true
        api-security-audit docs/calendar-service-api-v1.yaml || true